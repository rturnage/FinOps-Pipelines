{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "adf-cloud-financial-management"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/LoadResDetailsToDatabase')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "RefreshReservationDetailsSQLTable",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.costopt_StorageDirectoryName",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "preCopyScript": "delete costmanagement.ReservationDetails",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "InstanceFlexibilityGroup",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "InstanceFlexibilityGroup",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "InstanceFlexibilityRatio",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "InstanceFlexibilityRatio",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "InstanceId",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "InstanceId",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Kind",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "Kind",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ReservationId",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ReservationId",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ReservationOrderId",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ReservationOrderId",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ReservedHours",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "ReservedHours",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SkuName",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "SkuName",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "TotalReservedQuantity",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "TotalReservedQuantity",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UsageDate",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "UsageDate",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UsedHours",
                                            "type": "String",
                                            "physicalType": "String"
                                        },
                                        "sink": {
                                            "name": "UsedHours",
                                            "type": "String",
                                            "physicalType": "String"
                                        }
                                    }
                                ],
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": false,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "CSVFileDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccount": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@pipeline().parameters.costopt_StorageDirectoryName",
                                        "type": "Expression"
                                    },
                                    "File": "NOTUSED"
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "costoptSQLTableDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": {
                                        "value": "@pipeline().parameters.ResDetailsTargetTable",
                                        "type": "Expression"
                                    },
                                    "schemaname": {
                                        "value": "@pipeline().parameters.ResDetailsTargetSchema",
                                        "type": "Expression"
                                    },
                                    "sqlservername": {
                                        "value": "@pipeline().globalParameters.costopt_sqlservername",
                                        "type": "Expression"
                                    },
                                    "sqldbname": {
                                        "value": "@pipeline().globalParameters.costopt_sqldbname",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "ReOrganizeIndex",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "RefreshReservationDetailsSQLTable",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[costmanagement].[ReorganiseReservationDetailsIndex]"
                        },
                        "linkedServiceName": {
                            "referenceName": "AubiSQLDatabase",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databasename": {
                                    "value": "@pipeline().globalParameters.costopt_sqldbname",
                                    "type": "Expression"
                                },
                                "servername": {
                                    "value": "@pipeline().globalParameters.costopt_sqlservername",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "costopt_StorageDirectoryName": {
                        "type": "string"
                    },
                    "ResDetailsTargetTable": {
                        "type": "string",
                        "defaultValue": "ReservationDetails"
                    },
                    "ResDetailsTargetSchema": {
                        "type": "string",
                        "defaultValue": "costmanagement"
                    }
                },
                "folder": {
                    "name": "ReservationDetails"
                },
                "annotations": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ProcessInboundUsageData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "This pipeline looks for any usage files created by a cost management export and loads them to the database",
                "activities": [
                    {
                        "name": "LoadActualCostToSQL",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ForEachActualCostChildItem",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.02:00:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@{pipeline().parameters.UsageDownload_StorageBlobDirectory}/@{pipeline().parameters.ActualCostExportName}",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*.csv"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "InvoiceSectionName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "InvoiceSectionName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AccountName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountOwnerId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AccountOwnerId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroup",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroup",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceLocation",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceLocation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Date",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Date",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProductName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ProductName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MeterCategory",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MeterCategory",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MeterSubCategory",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MeterSubCategory",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MeterId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MeterId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MeterName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MeterName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MeterRegion",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MeterRegion",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UnitOfMeasure",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "UnitOfMeasure",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Quantity",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Quantity",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EffectivePrice",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EffectivePrice",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostInBillingCurrency",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CostInBillingCurrency",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostCenter",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CostCenter",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ConsumedService",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ConsumedService",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Tags",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Tags",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OfferId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "OfferId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AdditionalInfo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AdditionalInfo",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ServiceInfo1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ServiceInfo1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ServiceInfo2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ServiceInfo2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ReservationId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ReservationId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ReservationName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ReservationName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UnitPrice",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "UnitPrice",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProductOrderId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ProductOrderId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProductOrderName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ProductOrderName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Term",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Term",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PublisherType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PublisherType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PublisherName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PublisherName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ChargeType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ChargeType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Frequency",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Frequency",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PricingModel",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PricingModel",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AvailabilityZone",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AvailabilityZone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingAccountId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingAccountId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingAccountName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingAccountName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingCurrencyCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingCurrencyCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingPeriodStartDate",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingPeriodStartDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingPeriodEndDate",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingPeriodEndDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingProfileId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingProfileId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingProfileName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingProfileName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "InvoiceSectionId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "InvoiceSectionId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsAzureCreditEligible",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "IsAzureCreditEligible",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PartNumber",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PartNumber",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PayGPrice",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PayGPrice",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PlanName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PlanName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ServiceFamily",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ServiceFamily",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "CSVFileDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccount": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@{pipeline().parameters.UsageDownload_StorageBlobDirectory}/@{pipeline().parameters.ActualCostExportName}",
                                        "type": "Expression"
                                    },
                                    "File": {
                                        "value": "NOTUSED",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "costoptSQLTableDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": {
                                        "value": "ActualCost",
                                        "type": "Expression"
                                    },
                                    "schemaname": {
                                        "value": "@pipeline().parameters.TargetSchemaName",
                                        "type": "Expression"
                                    },
                                    "sqlservername": {
                                        "value": "@pipeline().globalParameters.costopt_sqlservername",
                                        "type": "Expression"
                                    },
                                    "sqldbname": {
                                        "value": "@pipeline().globalParameters.costopt_sqldbname",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "DeleteActualCostExportFiles",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "LoadActualCostToSQL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "AubiBinaryFile",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@{pipeline().parameters.UsageDownload_StorageBlobDirectory}/@{pipeline().parameters.ActualCostExportName}",
                                        "type": "Expression"
                                    },
                                    "FIleName": "NOTUSED"
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "wildcardFileName": "*",
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "ForEachActualCostChildItem",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetActualCostFilesToProcess",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetActualCostFilesToProcess').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "IfActualCostChildIsFolder",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "SetActualCostDeleteStartDate",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "SetActualCostDeleteEndDate",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(item().type,'Folder')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "DeleteActualCostData",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[costmanagement].[DeleteActualCostDataForDateRange]",
                                                    "storedProcedureParameters": {
                                                        "DateRangeEnd": {
                                                            "value": {
                                                                "value": "@variables('ActualCostDeleteEndDate')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "DateTime"
                                                        },
                                                        "DateRangeStart": {
                                                            "value": {
                                                                "value": "@variables('ActualCostDeleteStartDate')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "DateTime"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AubiSQLDatabase",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "databasename": {
                                                            "value": "@pipeline().globalParameters.costopt_sqldbname",
                                                            "type": "Expression"
                                                        },
                                                        "servername": {
                                                            "value": "@pipeline().globalParameters.costopt_sqlservername",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "SetActualCostDeleteStartDate",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ActualCostDeleteStartDate",
                                        "value": {
                                            "value": "@{substring(item().name,0,4)}-@{substring(item().name,4,2)}-@{substring(item().name,6,2)}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SetActualCostDeleteEndDate",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "ActualCostDeleteEndDate",
                                        "value": {
                                            "value": "@{substring(item().name,9,4)}-@{substring(item().name,13,2)}-@{substring(item().name,15,2)}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "GetActualCostFilesToProcess",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "ManagePartitions",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "CSVFileDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccount": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@{pipeline().parameters.UsageDownload_StorageBlobDirectory}/@{pipeline().parameters.ActualCostExportName}",
                                        "type": "Expression"
                                    },
                                    "File": {
                                        "value": "@trim('')",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems",
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "GetAmortizedCostFilesToProcess",
                        "type": "GetMetadata",
                        "dependsOn": [
                            {
                                "activity": "ManagePartitions",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "CSVFileDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccount": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@{pipeline().parameters.UsageDownload_StorageBlobDirectory}/@{pipeline().parameters.AmortizedCostExportName}",
                                        "type": "Expression"
                                    },
                                    "File": {
                                        "value": "@trim('')",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "childItems",
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "enablePartitionDiscovery": false
                            },
                            "formatSettings": {
                                "type": "DelimitedTextReadSettings"
                            }
                        }
                    },
                    {
                        "name": "ForEachAmortizedCostChildItem",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetAmortizedCostFilesToProcess",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('GetAmortizedCostFilesToProcess').output.childItems",
                                "type": "Expression"
                            },
                            "isSequential": true,
                            "activities": [
                                {
                                    "name": "IfAmortizedCostChildIsFolder",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "SetAmortizedDeleteStartDate",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        },
                                        {
                                            "activity": "SetAmortizedDeleteEndDate",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@equals(item().type,'Folder')",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "DeleteAmortizedCostData",
                                                "type": "SqlServerStoredProcedure",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "7.00:00:00",
                                                    "retry": 0,
                                                    "retryIntervalInSeconds": 30,
                                                    "secureOutput": false,
                                                    "secureInput": false
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "storedProcedureName": "[[costmanagement].[DeleteAmortizedCostDataForDateRange]",
                                                    "storedProcedureParameters": {
                                                        "DateRangeEnd": {
                                                            "value": {
                                                                "value": "@variables('AmortizedCostDeleteEndDate')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "DateTime"
                                                        },
                                                        "DateRangeStart": {
                                                            "value": {
                                                                "value": "@variables('AmortizedCostDeleteStartDate')",
                                                                "type": "Expression"
                                                            },
                                                            "type": "DateTime"
                                                        }
                                                    }
                                                },
                                                "linkedServiceName": {
                                                    "referenceName": "AubiSQLDatabase",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "databasename": {
                                                            "value": "@pipeline().globalParameters.costopt_sqldbname",
                                                            "type": "Expression"
                                                        },
                                                        "servername": {
                                                            "value": "@pipeline().globalParameters.costopt_sqlservername",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "SetAmortizedDeleteStartDate",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "AmortizedCostDeleteStartDate",
                                        "value": {
                                            "value": "@{substring(item().name,0,4)}-@{substring(item().name,4,2)}-@{substring(item().name,6,2)}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SetAmortizedDeleteEndDate",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "AmortizedCostDeleteEndDate",
                                        "value": {
                                            "value": "@{substring(item().name,9,4)}-@{substring(item().name,13,2)}-@{substring(item().name,15,2)}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "LoadAmortizedCostToSQL",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ForEachAmortizedCostChildItem",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.02:00:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "DelimitedTextSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@{pipeline().parameters.UsageDownload_StorageBlobDirectory}/@{pipeline().parameters.AmortizedCostExportName}",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*.csv"
                                },
                                "formatSettings": {
                                    "type": "DelimitedTextReadSettings"
                                }
                            },
                            "sink": {
                                "type": "AzureSqlSink",
                                "disableMetricsCollection": false
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "name": "InvoiceSectionName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "InvoiceSectionName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AccountName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AccountOwnerId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AccountOwnerId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "SubscriptionName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "SubscriptionName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceGroup",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceGroup",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceLocation",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceLocation",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Date",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Date",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProductName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ProductName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MeterCategory",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MeterCategory",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MeterSubCategory",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MeterSubCategory",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MeterId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MeterId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MeterName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MeterName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "MeterRegion",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "MeterRegion",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UnitOfMeasure",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "UnitOfMeasure",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Quantity",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Quantity",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "EffectivePrice",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "EffectivePrice",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostInBillingCurrency",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CostInBillingCurrency",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "CostCenter",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "CostCenter",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ConsumedService",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ConsumedService",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Tags",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Tags",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "OfferId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "OfferId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AdditionalInfo",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AdditionalInfo",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ServiceInfo1",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ServiceInfo1",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ServiceInfo2",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ServiceInfo2",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ResourceName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ResourceName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ReservationId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ReservationId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ReservationName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ReservationName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "UnitPrice",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "UnitPrice",
                                            "type": "Decimal"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProductOrderId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ProductOrderId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ProductOrderName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ProductOrderName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Term",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Term",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PublisherType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PublisherType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PublisherName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PublisherName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ChargeType",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ChargeType",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "Frequency",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "Frequency",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PricingModel",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PricingModel",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "AvailabilityZone",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "AvailabilityZone",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingAccountId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingAccountId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingAccountName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingAccountName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingCurrencyCode",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingCurrencyCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingPeriodStartDate",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingPeriodStartDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingPeriodEndDate",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingPeriodEndDate",
                                            "type": "DateTime"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingProfileId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingProfileId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "BillingProfileName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "BillingProfileName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "InvoiceSectionId",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "InvoiceSectionId",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "IsAzureCreditEligible",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "IsAzureCreditEligible",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PartNumber",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PartNumber",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PayGPrice",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PayGPrice",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "PlanName",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "PlanName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "name": "ServiceFamily",
                                            "type": "String"
                                        },
                                        "sink": {
                                            "name": "ServiceFamily",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "CSVFileDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccount": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@{pipeline().parameters.UsageDownload_StorageBlobDirectory}/@{pipeline().parameters.AmortizedCostExportName}",
                                        "type": "Expression"
                                    },
                                    "File": {
                                        "value": "NOTUSED",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "costoptSQLTableDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "tablename": {
                                        "value": "AmortizedCost",
                                        "type": "Expression"
                                    },
                                    "schemaname": {
                                        "value": "@pipeline().parameters.TargetSchemaName",
                                        "type": "Expression"
                                    },
                                    "sqlservername": {
                                        "value": "@pipeline().globalParameters.costopt_sqlservername",
                                        "type": "Expression"
                                    },
                                    "sqldbname": {
                                        "value": "@pipeline().globalParameters.costopt_sqldbname",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "DeleteAmortizedCostExportFiles",
                        "type": "Delete",
                        "dependsOn": [
                            {
                                "activity": "LoadAmortizedCostToSQL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "AubiBinaryFile",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@{pipeline().parameters.UsageDownload_StorageBlobDirectory}/@{pipeline().parameters.AmortizedCostExportName}",
                                        "type": "Expression"
                                    },
                                    "FIleName": "NOTUSED"
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true,
                                "wildcardFileName": "*",
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "ManagePartitions",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "costmanagement.addMonthPartitions"
                        },
                        "linkedServiceName": {
                            "referenceName": "AubiSQLDatabase",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databasename": {
                                    "value": "@pipeline().globalParameters.costopt_sqldbname",
                                    "type": "Expression"
                                },
                                "servername": {
                                    "value": "@pipeline().globalParameters.costopt_sqlservername",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ReOrgActualCostIndex",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "LoadActualCostToSQL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[costmanagement].[ReorganiseActualCostIndex]"
                        },
                        "linkedServiceName": {
                            "referenceName": "AubiSQLDatabase",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databasename": {
                                    "value": "@pipeline().globalParameters.costopt_sqldbname",
                                    "type": "Expression"
                                },
                                "servername": {
                                    "value": "@pipeline().globalParameters.costopt_sqlservername",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ReOrgAmortizedCostIndex",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "LoadAmortizedCostToSQL",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[costmanagement].[ReorganiseAmortizedCostIndex]"
                        },
                        "linkedServiceName": {
                            "referenceName": "AubiSQLDatabase",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databasename": {
                                    "value": "@pipeline().globalParameters.costopt_sqldbname",
                                    "type": "Expression"
                                },
                                "servername": {
                                    "value": "@pipeline().globalParameters.costopt_sqlservername",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "UsageDownload_StorageBlobDirectory": {
                        "type": "string",
                        "defaultValue": "download/usage/scheduled_exports"
                    },
                    "TargetSchemaName": {
                        "type": "string",
                        "defaultValue": "costmanagement"
                    },
                    "ActualCostExportName": {
                        "type": "string",
                        "defaultValue": "msftCostManagementExportActualCost"
                    },
                    "AmortizedCostExportName": {
                        "type": "string",
                        "defaultValue": "msftCostManagementExportAmortizedCost"
                    }
                },
                "variables": {
                    "ActualCostDeleteStartDate": {
                        "type": "String",
                        "defaultValue": "1901-01-01"
                    },
                    "ActualCostDeleteEndDate": {
                        "type": "String",
                        "defaultValue": "1901-01-01"
                    },
                    "AmortizedCostDeleteStartDate": {
                        "type": "String",
                        "defaultValue": "1901-01-01"
                    },
                    "AmortizedCostDeleteEndDate": {
                        "type": "String",
                        "defaultValue": "1901-01-01"
                    }
                },
                "folder": {
                    "name": "UsageData"
                },
                "annotations": [],
                "lastPublishTime": "2021-10-09T21:50:18Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/ManagementAPIDataSet')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureManagementAPI",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "servicePrincipalId": {
                            "value": "@dataset().servicePrincipalId",
                            "type": "Expression"
                        },
                        "servicePrincipalSecretKeyName": {
                            "value": "@dataset().servicePrincipalSecretKeyName",
                            "type": "Expression"
                        },
                        "tenantId": {
                            "value": "@dataset().tenantId",
                            "type": "Expression"
                        },
                        "KeyVaultName": {
                            "value": "@dataset().KeyVaultName",
                            "type": "Expression"
                        }
                    }
                },
                "parameters": {
                    "servicePrincipalId": {
                        "type": "string"
                    },
                    "servicePrincipalSecretKeyName": {
                        "type": "string"
                    },
                    "tenantId": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "api": {
                        "type": "string"
                    },
                    "apiversion": {
                        "type": "string"
                    },
                    "filter": {
                        "type": "string"
                    },
                    "KeyVaultName": {
                        "type": "string"
                    }
                },
                "annotations": [],
                "type": "RestResource",
                "typeProperties": {
                    "relativeUrl": {
                        "value": "@{dataset().scope}/@{dataset().api}?api-version=@{dataset().apiversion}@{dataset().filter}",
                        "type": "Expression"
                    }
                },
                "schema": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CreateAndRunUsageExport')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetClientId",
                        "description": "Retrieve ClientId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_clientId_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetTenantId",
                        "description": "Retrieve TenantId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_tenantid_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "CreateExport",
                        "description": "Make a call to the ExportAPI to export usage details for a date range specified by pipeline params.",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "DeleteNamedExport_Pre",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:02:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 60,
                            "secureOutput": false,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@concat('https://management.azure.com/', pipeline().parameters.scope, '/providers/Microsoft.CostManagement/exports/',pipeline().parameters.exportName,'?api-version=',pipeline().parameters.CostManagementApiVersion)",
                                "type": "Expression"
                            },
                            "method": "PUT",
                            "headers": {},
                            "body": {
                                "value": "@variables('body')",
                                "type": "Expression"
                            },
                            "authentication": {
                                "type": "ServicePrincipal",
                                "userTenant": {
                                    "value": "@activity('GetTenantId').output.value",
                                    "type": "Expression"
                                },
                                "username": {
                                    "value": "@activity('GetClientId').output.value",
                                    "type": "Expression"
                                },
                                "resource": "https://management.azure.com",
                                "password": {
                                    "type": "AzureKeyVaultSecret",
                                    "store": {
                                        "referenceName": "aubiKeyVault",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "KeyVaultName": {
                                                "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "secretName": {
                                        "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "DeleteNamedExport_Post",
                        "description": "Make a call to the ExportAPI to delete the named export",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "PollUntilExportComplete",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:02:00",
                            "retry": 5,
                            "retryIntervalInSeconds": 60,
                            "secureOutput": false,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@concat('https://management.azure.com/', pipeline().parameters.scope, '/providers/Microsoft.CostManagement/exports/',pipeline().parameters.exportName,'?api-version=',pipeline().parameters.CostManagementApiVersion)",
                                "type": "Expression"
                            },
                            "method": "DELETE",
                            "headers": {},
                            "body": "x",
                            "authentication": {
                                "type": "ServicePrincipal",
                                "userTenant": {
                                    "value": "@activity('GetTenantId').output.value",
                                    "type": "Expression"
                                },
                                "username": {
                                    "value": "@activity('GetClientId').output.value",
                                    "type": "Expression"
                                },
                                "resource": "https://management.azure.com",
                                "password": {
                                    "type": "AzureKeyVaultSecret",
                                    "store": {
                                        "referenceName": "aubiKeyVault",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "KeyVaultName": {
                                                "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "secretName": {
                                        "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "PollUntilExportComplete",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "CreateExport",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@not(equals(variables('PollingStatus'),'WAIT'))",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "GetExportRunStatus",
                                    "type": "WebActivity",
                                    "dependsOn": [
                                        {
                                            "activity": "Wait For Export",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "@concat('https://management.azure.com/', pipeline().parameters.scope, '/providers/Microsoft.CostManagement/exports/',pipeline().parameters.exportName,'/runHistory?api-version=',pipeline().parameters.CostManagementApiVersion)",
                                            "type": "Expression"
                                        },
                                        "method": "GET",
                                        "headers": {},
                                        "authentication": {
                                            "type": "ServicePrincipal",
                                            "userTenant": {
                                                "value": "@activity('GetTenantId').output.value",
                                                "type": "Expression"
                                            },
                                            "username": {
                                                "value": "@activity('GetClientId').output.value",
                                                "type": "Expression"
                                            },
                                            "resource": "https://management.azure.com",
                                            "password": {
                                                "type": "AzureKeyVaultSecret",
                                                "store": {
                                                    "referenceName": "aubiKeyVault",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "KeyVaultName": {
                                                            "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "secretName": {
                                                    "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                },
                                {
                                    "name": "Wait For Export",
                                    "type": "Wait",
                                    "dependsOn": [
                                        {
                                            "activity": "Set Status WAIT",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "waitTimeInSeconds": {
                                            "value": "@pipeline().parameters.ExportStatusCheckLoopTime",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "UpdateExportRunStatus",
                                    "type": "Switch",
                                    "dependsOn": [
                                        {
                                            "activity": "GetExportRunStatus",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "on": {
                                            "value": "@string(activity('GetExportRunStatus').output.value[0].properties.status)",
                                            "type": "Expression"
                                        },
                                        "cases": [
                                            {
                                                "value": "Completed",
                                                "activities": [
                                                    {
                                                        "name": "Set Status COMPLETED",
                                                        "type": "SetVariable",
                                                        "dependsOn": [],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "PollingStatus",
                                                            "value": "COMPLETED"
                                                        }
                                                    },
                                                    {
                                                        "name": "Set Exported Filename",
                                                        "type": "SetVariable",
                                                        "dependsOn": [
                                                            {
                                                                "activity": "Set Status COMPLETED",
                                                                "dependencyConditions": [
                                                                    "Succeeded"
                                                                ]
                                                            }
                                                        ],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "ExportedFilename",
                                                            "value": {
                                                                "value": "@string(activity('GetExportRunStatus').output.value[0].properties.fileName)",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "value": "Failed",
                                                "activities": [
                                                    {
                                                        "name": "Failed - Set Status FAILED",
                                                        "type": "SetVariable",
                                                        "dependsOn": [],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "PollingStatus",
                                                            "value": "FAILED"
                                                        }
                                                    },
                                                    {
                                                        "name": "Failed - Increment Failure Count Temp Variable",
                                                        "type": "SetVariable",
                                                        "dependsOn": [
                                                            {
                                                                "activity": "Failed - Set Status FAILED",
                                                                "dependencyConditions": [
                                                                    "Succeeded"
                                                                ]
                                                            }
                                                        ],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "TempRetries",
                                                            "value": {
                                                                "value": "@string(add(int(variables('ExportExecutionRetries')), 1))",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "Failed - Increment Failure Count",
                                                        "type": "SetVariable",
                                                        "dependsOn": [
                                                            {
                                                                "activity": "Failed - Increment Failure Count Temp Variable",
                                                                "dependencyConditions": [
                                                                    "Succeeded"
                                                                ]
                                                            }
                                                        ],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "ExportExecutionRetries",
                                                            "value": {
                                                                "value": "@variables('TempRetries')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "value": "Timeout",
                                                "activities": [
                                                    {
                                                        "name": "Timeout - Set Status FAILED",
                                                        "type": "SetVariable",
                                                        "dependsOn": [],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "PollingStatus",
                                                            "value": "FAILED"
                                                        }
                                                    },
                                                    {
                                                        "name": "Timeout - Increment Failure Count",
                                                        "type": "SetVariable",
                                                        "dependsOn": [
                                                            {
                                                                "activity": "Timeout - Increment Failure Count Temp Variable",
                                                                "dependencyConditions": [
                                                                    "Succeeded"
                                                                ]
                                                            }
                                                        ],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "TempRetries",
                                                            "value": {
                                                                "value": "@string(add(int(variables('ExportExecutionRetries')), 1))",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "Timeout - Increment Failure Count Temp Variable",
                                                        "type": "SetVariable",
                                                        "dependsOn": [
                                                            {
                                                                "activity": "Timeout - Set Status FAILED",
                                                                "dependencyConditions": [
                                                                    "Succeeded"
                                                                ]
                                                            }
                                                        ],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "TempRetries",
                                                            "value": {
                                                                "value": "@string(add(int(variables('ExportExecutionRetries')), 1))",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "value": "DataNotAvailable",
                                                "activities": [
                                                    {
                                                        "name": "Data Not Avail - Set Status FAILED",
                                                        "type": "SetVariable",
                                                        "dependsOn": [],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "PollingStatus",
                                                            "value": "FAILED"
                                                        }
                                                    },
                                                    {
                                                        "name": "Data Not Avail - Increment Failure Count",
                                                        "type": "SetVariable",
                                                        "dependsOn": [
                                                            {
                                                                "activity": "Data Not Avail - Increment Failure Count Temp Variable",
                                                                "dependencyConditions": [
                                                                    "Succeeded"
                                                                ]
                                                            }
                                                        ],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "TempRetries",
                                                            "value": {
                                                                "value": "@string(add(int(variables('ExportExecutionRetries')), 1))",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "Data Not Avail - Increment Failure Count Temp Variable",
                                                        "type": "SetVariable",
                                                        "dependsOn": [
                                                            {
                                                                "activity": "Data Not Avail - Set Status FAILED",
                                                                "dependencyConditions": [
                                                                    "Succeeded"
                                                                ]
                                                            }
                                                        ],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "ExportExecutionRetries",
                                                            "value": {
                                                                "value": "@variables('TempRetries')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            },
                                            {
                                                "value": "NewDataNotAvailable",
                                                "activities": [
                                                    {
                                                        "name": "NewDataNotAvail - Set Status FAILED",
                                                        "type": "SetVariable",
                                                        "dependsOn": [],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "PollingStatus",
                                                            "value": "FAILED"
                                                        }
                                                    },
                                                    {
                                                        "name": "NewDataNotAvail - Increment Failure Count",
                                                        "type": "SetVariable",
                                                        "dependsOn": [
                                                            {
                                                                "activity": "NewDataNotAvail - Increment Failure Count Temp Variable",
                                                                "dependencyConditions": [
                                                                    "Succeeded"
                                                                ]
                                                            }
                                                        ],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "TempRetries",
                                                            "value": {
                                                                "value": "@string(add(int(variables('ExportExecutionRetries')), 1))",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    },
                                                    {
                                                        "name": "NewDataNotAvail - Increment Failure Count Temp Variable",
                                                        "type": "SetVariable",
                                                        "dependsOn": [
                                                            {
                                                                "activity": "NewDataNotAvail - Set Status FAILED",
                                                                "dependencyConditions": [
                                                                    "Succeeded"
                                                                ]
                                                            }
                                                        ],
                                                        "userProperties": [],
                                                        "typeProperties": {
                                                            "variableName": "ExportExecutionRetries",
                                                            "value": {
                                                                "value": "@variables('TempRetries')",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "Set Status WAIT",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "CheckExecuteExport",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "PollingStatus",
                                        "value": "WAIT"
                                    }
                                },
                                {
                                    "name": "CheckExecuteExport",
                                    "type": "IfCondition",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@and(or(equals(variables('PollingStatus'),'NOTSTARTED'),equals(variables('PollingStatus'),'FAILED')),lessOrEquals(int(variables('ExportExecutionRetries')),int(pipeline().parameters.MaxExportExecutionRetries)))",
                                            "type": "Expression"
                                        },
                                        "ifTrueActivities": [
                                            {
                                                "name": "RunNamedExport",
                                                "description": "Make a call to the ExportAPI to export usage details for a date range specified by pipeline params.",
                                                "type": "WebActivity",
                                                "dependsOn": [],
                                                "policy": {
                                                    "timeout": "0.00:02:00",
                                                    "retry": 5,
                                                    "retryIntervalInSeconds": 60,
                                                    "secureOutput": false,
                                                    "secureInput": true
                                                },
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "url": {
                                                        "value": "@concat('https://management.azure.com/', pipeline().parameters.scope, '/providers/Microsoft.CostManagement/exports/',pipeline().parameters.exportName,'/run?api-version=',pipeline().parameters.CostManagementApiVersion)",
                                                        "type": "Expression"
                                                    },
                                                    "method": "POST",
                                                    "headers": {},
                                                    "body": "x",
                                                    "authentication": {
                                                        "type": "ServicePrincipal",
                                                        "userTenant": {
                                                            "value": "@activity('GetTenantId').output.value",
                                                            "type": "Expression"
                                                        },
                                                        "username": {
                                                            "value": "@activity('GetClientId').output.value",
                                                            "type": "Expression"
                                                        },
                                                        "resource": "https://management.azure.com",
                                                        "password": {
                                                            "type": "AzureKeyVaultSecret",
                                                            "store": {
                                                                "referenceName": "aubiKeyVault",
                                                                "type": "LinkedServiceReference",
                                                                "parameters": {
                                                                    "KeyVaultName": {
                                                                        "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                                                        "type": "Expression"
                                                                    }
                                                                }
                                                            },
                                                            "secretName": {
                                                                "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                                                "type": "Expression"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "timeout": "0.01:00:00"
                        }
                    },
                    {
                        "name": "DeleteNamedExport_Pre",
                        "description": "Make a call to the ExportAPI to delete the named export",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "SetExportAPIBody",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "0.00:02:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "@concat('https://management.azure.com/', pipeline().parameters.scope, '/providers/Microsoft.CostManagement/exports/',pipeline().parameters.exportName,'?api-version=',pipeline().parameters.CostManagementApiVersion)",
                                "type": "Expression"
                            },
                            "method": "DELETE",
                            "headers": {},
                            "body": "x",
                            "authentication": {
                                "type": "ServicePrincipal",
                                "userTenant": {
                                    "value": "@activity('GetTenantId').output.value",
                                    "type": "Expression"
                                },
                                "username": {
                                    "value": "@activity('GetClientId').output.value",
                                    "type": "Expression"
                                },
                                "resource": "https://management.azure.com",
                                "password": {
                                    "type": "AzureKeyVaultSecret",
                                    "store": {
                                        "referenceName": "aubiKeyVault",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "KeyVaultName": {
                                                "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "secretName": {
                                        "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "SetExportAPIBody",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "SetStorageAcctResourcePath",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetTenantId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetClientId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "body",
                            "value": {
                                "value": "@concat(\n'{\"properties\": {\"schedule\": {\"status\": \"Inactive\",},\"format\": \"Csv\",\"deliveryInfo\": {\"destination\":{\"resourceId\":\"'\n, variables('StorageAccountResourcePath')\n,'\",\"container\": \"'\n,pipeline().globalParameters.costopt_Container\n,'\",\"rootFolderPath\": \"'\n,pipeline().parameters.UsageDownload_StorageBlobDirectory\n,'\"}},\"definition\": {\"type\": \"'\n,pipeline().parameters.ExportType\n,'\",\"timeframe\": \"'\n,pipeline().parameters.ExportTimeframe\n,'\",'\n,if(equals(pipeline().parameters.ExportTimeframe,'Custom'),concat('\"timePeriod\":{\"from\":\"',pipeline().parameters.StartDate,'\",\"to\":\"',pipeline().parameters.EndDate,'\"},'),'')\n,'\"dataSet\": {\"granularity\": \"Daily\"}}}}'\n)",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "SetStorageAcctResourcePath",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "StorageAccountResourcePath",
                            "value": {
                                "value": "/subscriptions/@{pipeline().globalParameters.costopt_StorageAccountSubscriptionId}/resourceGroups/@{pipeline().globalParameters.costopt_ResourceGroupName}/providers/Microsoft.Storage/storageAccounts/@{pipeline().globalParameters.costopt_StorageAccountName}",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "LoadUsageFileToDatabase",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "DeleteNamedExport_Post",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "LoadConsumptionDataToDatabase",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "TargetSchemaName": "costmanagement",
                                "TargetTableName": {
                                    "value": "@if(equals(pipeline().parameters.ExportType,'ActualCost'),'ActualCost','AmortizedCost')",
                                    "type": "Expression"
                                },
                                "StartDate": {
                                    "value": "@pipeline().parameters.StartDate",
                                    "type": "Expression"
                                },
                                "EndDate": {
                                    "value": "@pipeline().parameters.EndDate",
                                    "type": "Expression"
                                },
                                "UsageDownload_Filename": {
                                    "value": "@variables('ExportedFilename')",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "exportName": {
                        "type": "string",
                        "defaultValue": "msftExportUsageTemp"
                    },
                    "scope": {
                        "type": "string",
                        "defaultValue": "providers/Microsoft.Billing/billingAccounts/<BillingAccountNum>"
                    },
                    "CostManagementApiVersion": {
                        "type": "string",
                        "defaultValue": "2021-01-01"
                    },
                    "UsageDownload_StorageBlobDirectory": {
                        "type": "string",
                        "defaultValue": "download/usage"
                    },
                    "MaxExportExecutionRetries": {
                        "type": "int",
                        "defaultValue": 3
                    },
                    "StartDate": {
                        "type": "string",
                        "defaultValue": "2021-09-01"
                    },
                    "EndDate": {
                        "type": "string",
                        "defaultValue": "2021-09-02"
                    },
                    "ExportTimeframe": {
                        "type": "string",
                        "defaultValue": "Custom"
                    },
                    "ExportType": {
                        "type": "string",
                        "defaultValue": "ActualCost"
                    },
                    "ExportStatusCheckLoopTime": {
                        "type": "int",
                        "defaultValue": 60
                    }
                },
                "variables": {
                    "PollingStatus": {
                        "type": "String",
                        "defaultValue": "NOTSTARTED"
                    },
                    "ExportExecutionRetries": {
                        "type": "String",
                        "defaultValue": "0"
                    },
                    "TempRetries": {
                        "type": "String",
                        "defaultValue": "0"
                    },
                    "ExportedFilename": {
                        "type": "String"
                    },
                    "body": {
                        "type": "String"
                    },
                    "StorageAccountResourcePath": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "UsageData"
                },
                "annotations": [],
                "lastPublishTime": "2021-09-23T00:37:08Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/GetMarketplaceData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "\n\nsubscriptions/b466d563-74e6-4232-a5c6-f39f65f6f1fc - No data returned\n",
                "activities": [
                    {
                        "name": "GetClientId",
                        "description": "Retrieve ClientId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_clientId_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetTenantId",
                        "description": "Retrieve TenantId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_tenantid_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "CopyConsumptionAPIMarketPlaceData",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "GetClientId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetTenantId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:10:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "paginationRules": {
                                    "AbsoluteUrl": "$.nextLink"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings",
                                    "filePattern": "arrayOfObjects"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "path": "$['id']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['name']"
                                        },
                                        "sink": {
                                            "path": "$['name']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['type']"
                                        },
                                        "sink": {
                                            "path": "$['type']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['tags']"
                                        },
                                        "sink": {
                                            "path": "$['tags']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']"
                                        },
                                        "sink": {
                                            "path": "$['properties']"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ManagementAPIDataSet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "servicePrincipalId": {
                                        "value": "@activity('GetClientId').output.value",
                                        "type": "Expression"
                                    },
                                    "servicePrincipalSecretKeyName": {
                                        "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                        "type": "Expression"
                                    },
                                    "tenantId": {
                                        "value": "@activity('GetTenantId').output.value",
                                        "type": "Expression"
                                    },
                                    "scope": {
                                        "value": "@pipeline().parameters.scope",
                                        "type": "Expression"
                                    },
                                    "api": "providers/Microsoft.Consumption/marketplaces",
                                    "apiversion": {
                                        "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                        "type": "Expression"
                                    },
                                    "filter": {
                                        "value": "&$filter=properties/usageStart ge '@{pipeline().parameters.UsageStartDate}' and properties/usageEnd le '@{pipeline().parameters.UsageEndDate}'",
                                        "type": "Expression"
                                    },
                                    "KeyVaultName": {
                                        "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "JsonDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.DownloadTargetFilename",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "Download_StorageBlobDirectory": {
                        "type": "string",
                        "defaultValue": "download/marketplace"
                    },
                    "DownloadTargetFilename": {
                        "type": "string",
                        "defaultValue": "marketplace.json"
                    },
                    "scope": {
                        "type": "string",
                        "defaultValue": "providers/Microsoft.Billing/billingAccounts/<BillingAccountNum>"
                    },
                    "UsageStartDate": {
                        "type": "string",
                        "defaultValue": "2021-01-01"
                    },
                    "UsageEndDate": {
                        "type": "string",
                        "defaultValue": "2021-09-21"
                    },
                    "ConsumptionAPIVersion": {
                        "type": "string",
                        "defaultValue": "2019-10-01"
                    }
                },
                "folder": {
                    "name": "Marketplaces"
                },
                "annotations": [],
                "lastPublishTime": "2021-09-22T19:26:46Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ManagementAPIDataSet')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GetPriceSheet')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetClientId",
                        "description": "Retrieve ClientId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_clientId_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetTenantId",
                        "description": "Retrieve TenantId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_tenantid_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "CopyConsumptionAPIPriceSheetData",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "GetClientId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetTenantId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:10:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "paginationRules": {
                                    "AbsoluteUrl": "$.properties.nextLink"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings",
                                    "filePattern": "arrayOfObjects"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['billingPeriodId']"
                                        },
                                        "sink": {
                                            "path": "$['billingPeriodId']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['meterId']"
                                        },
                                        "sink": {
                                            "path": "$['meterId']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['meterDetails']"
                                        },
                                        "sink": {
                                            "path": "$['meterDetails']"
                                        }
                                    }
                                ],
                                "collectionReference": "$['properties']['pricesheets']"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ManagementAPIDataSet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "servicePrincipalId": {
                                        "value": "@activity('GetClientId').output.value",
                                        "type": "Expression"
                                    },
                                    "servicePrincipalSecretKeyName": {
                                        "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                        "type": "Expression"
                                    },
                                    "tenantId": {
                                        "value": "@activity('GetTenantId').output.value",
                                        "type": "Expression"
                                    },
                                    "scope": {
                                        "value": "@pipeline().parameters.scope",
                                        "type": "Expression"
                                    },
                                    "api": "providers/Microsoft.Consumption/pricesheets/default",
                                    "apiversion": {
                                        "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                        "type": "Expression"
                                    },
                                    "filter": {
                                        "value": "&$expand=meterDetails",
                                        "type": "Expression"
                                    },
                                    "KeyVaultName": {
                                        "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "JsonDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().parameters.Download_StorageBlobContainer",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.DownloadTargetFilename",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "Download_StorageBlobContainer": {
                        "type": "string",
                        "defaultValue": "aubi"
                    },
                    "Download_StorageBlobDirectory": {
                        "type": "string",
                        "defaultValue": "download/pricesheet/"
                    },
                    "DownloadTargetFilename": {
                        "type": "string",
                        "defaultValue": "pricesheet.json"
                    },
                    "scope": {
                        "type": "string",
                        "defaultValue": "subscriptions/<SubId>"
                    },
                    "ConsumptionAPIVersion": {
                        "type": "string",
                        "defaultValue": "2019-10-01"
                    }
                },
                "folder": {
                    "name": "PriceSheet"
                },
                "annotations": [],
                "lastPublishTime": "2021-09-22T20:01:23Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ManagementAPIDataSet')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GetRecommendationsForSub')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "TryUntilFileExists",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "GetTenantId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetClientId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@bool(activity('GetFileMetadata').output.exists)",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "GetFileMetadata",
                                    "type": "GetMetadata",
                                    "dependsOn": [
                                        {
                                            "activity": "GetAdvisorData",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "policy": {
                                        "timeout": "0.00:02:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "JsonDataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "StorageAccountName": {
                                                    "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                                    "type": "Expression"
                                                },
                                                "Container": {
                                                    "value": "@pipeline().globalParameters.costopt_Container",
                                                    "type": "Expression"
                                                },
                                                "Directory": {
                                                    "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "advisor_@{pipeline().parameters.SubscriptionId}.json",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "fieldList": [
                                            "exists"
                                        ],
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true
                                        },
                                        "formatSettings": {
                                            "type": "JsonReadSettings"
                                        }
                                    }
                                },
                                {
                                    "name": "GetAdvisorData",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "0.00:10:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET"
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ManagementAPIDataSet",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "servicePrincipalId": {
                                                    "value": "@activity('GetClientId').output.value",
                                                    "type": "Expression"
                                                },
                                                "servicePrincipalSecretKeyName": {
                                                    "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                                    "type": "Expression"
                                                },
                                                "tenantId": {
                                                    "value": "@activity('GetTenantId').output.value",
                                                    "type": "Expression"
                                                },
                                                "scope": {
                                                    "value": "subscriptions/@{pipeline().parameters.SubscriptionId}",
                                                    "type": "Expression"
                                                },
                                                "api": {
                                                    "value": "providers/Microsoft.Advisor/recommendations",
                                                    "type": "Expression"
                                                },
                                                "apiversion": {
                                                    "value": "@pipeline().parameters.RecommendationsAPIVersion",
                                                    "type": "Expression"
                                                },
                                                "filter": {
                                                    "value": "@trim('')",
                                                    "type": "Expression"
                                                },
                                                "KeyVaultName": {
                                                    "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "JsonDataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "StorageAccountName": {
                                                    "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                                    "type": "Expression"
                                                },
                                                "Container": {
                                                    "value": "@pipeline().globalParameters.costopt_Container",
                                                    "type": "Expression"
                                                },
                                                "Directory": {
                                                    "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "advisor_@{pipeline().parameters.SubscriptionId}.json",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                },
                                {
                                    "name": "WaitIfFileIsMissing",
                                    "type": "IfCondition",
                                    "dependsOn": [
                                        {
                                            "activity": "GetFileMetadata",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "expression": {
                                            "value": "@bool(activity('GetFileMetadata').output.exists)",
                                            "type": "Expression"
                                        },
                                        "ifFalseActivities": [
                                            {
                                                "name": "Wait",
                                                "type": "Wait",
                                                "dependsOn": [],
                                                "userProperties": [],
                                                "typeProperties": {
                                                    "waitTimeInSeconds": {
                                                        "value": "@pipeline().parameters.WaitTimeSecs",
                                                        "type": "Expression"
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "timeout": "0.00:20:00"
                        }
                    },
                    {
                        "name": "GetClientId",
                        "description": "Retrieve ClientId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_clientId_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetTenantId",
                        "description": "Retrieve TenantId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_tenantid_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "WaitTimeSecs": {
                        "type": "int",
                        "defaultValue": 60
                    },
                    "SubscriptionId": {
                        "type": "string"
                    },
                    "Download_StorageBlobContainer": {
                        "type": "string"
                    },
                    "Download_StorageBlobDirectory": {
                        "type": "string"
                    },
                    "DownloadTargetFilename": {
                        "type": "string"
                    },
                    "RecommendationsAPIVersion": {
                        "type": "string",
                        "defaultValue": "2020-01-01"
                    }
                },
                "folder": {
                    "name": "Advisor"
                },
                "annotations": [],
                "lastPublishTime": "2021-09-22T20:01:23Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ManagementAPIDataSet')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GetReservationDetailsOrchestrator')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "DeleteReservationDetailsFiles",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "AubiBinaryFile",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@pipeline().parameters.costopt_StorageDirectoryName",
                                        "type": "Expression"
                                    },
                                    "FIleName": "NOTNEEDED"
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": false,
                                "wildcardFileName": "*",
                                "enablePartitionDiscovery": false
                            }
                        }
                    },
                    {
                        "name": "UntilEndDateReached",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "SetBatchStartDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greaterOrEquals(variables('BatchEndDate'),pipeline().parameters.ExtractEndDate)",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "SetBatchEndDate",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "BatchEndDate",
                                        "value": {
                                            "value": "@if( greater(adddays(variables('BatchStartDate'),pipeline().parameters.ResDetailsLoopIncrement,'yyyy-MM-dd') , pipeline().parameters.ExtractEndDate)\n, pipeline().parameters.ExtractEndDate\n,adddays(variables('BatchStartDate'),pipeline().parameters.ResDetailsLoopIncrement,'yyyy-MM-dd')\n)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "SetNewStartDate",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "AddDateRangeToProcess",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "BatchStartDate",
                                        "value": {
                                            "value": "@adddays(variables('BatchEndDate'),1,'yyyy-MM-dd')",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "AddDateRangeToProcess",
                                    "type": "AppendVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SetBatchEndDate",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "DateRangesToProcess",
                                        "value": {
                                            "value": "{\"StartDate\":\"@{variables('BatchStartDate')}\",\"EndDate\":\"@{variables('BatchEndDate')}\"}",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "7.00:00:00"
                        }
                    },
                    {
                        "name": "SetBatchStartDate",
                        "type": "SetVariable",
                        "dependsOn": [
                            {
                                "activity": "DeleteReservationDetailsFiles",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "BatchStartDate",
                            "value": {
                                "value": "@pipeline().parameters.ExtractStartDate",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEachDateRange",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "UntilEndDateReached",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('DateRangesToProcess')",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "batchCount": 5,
                            "activities": [
                                {
                                    "name": "GetReservationDetails",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "GetReservationDetailsReportAsynch",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Download_StorageBlobDirectory": {
                                                "value": "@pipeline().parameters.costopt_StorageDirectoryName",
                                                "type": "Expression"
                                            },
                                            "DownloadTargetFilename": {
                                                "value": "resdetails-@{formatDateTime(json(item()).StartDate,'yyyyMMdd')}-@{formatDateTime(json(item()).EndDate,'yyyyMMdd')}.csv",
                                                "type": "Expression"
                                            },
                                            "scope": {
                                                "value": "@pipeline().parameters.BillingAccountScope",
                                                "type": "Expression"
                                            },
                                            "CostManagementAPIVersion": {
                                                "value": "@pipeline().parameters.CostManagementAPIVersion",
                                                "type": "Expression"
                                            },
                                            "StartDate": {
                                                "value": "@json(item()).StartDate",
                                                "type": "Expression"
                                            },
                                            "EndDate": {
                                                "value": "@json(item()).EndDate",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "costopt_StorageDirectoryName": {
                        "type": "string",
                        "defaultValue": "download/resdetails"
                    },
                    "ExtractStartDate": {
                        "type": "string",
                        "defaultValue": "2021-01-01"
                    },
                    "ExtractEndDate": {
                        "type": "string",
                        "defaultValue": "2021-01-03"
                    },
                    "ResDetailsLoopIncrement": {
                        "type": "int",
                        "defaultValue": 60
                    },
                    "BillingAccountScope": {
                        "type": "string",
                        "defaultValue": "providers/Microsoft.Billing/billingAccounts/<BillingAccountNum>"
                    },
                    "CostManagementAPIVersion": {
                        "type": "string",
                        "defaultValue": "2019-11-01"
                    }
                },
                "variables": {
                    "DateRangesToProcess": {
                        "type": "Array"
                    },
                    "BatchStartDate": {
                        "type": "String"
                    },
                    "BatchEndDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "ReservationDetails"
                },
                "annotations": []
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/GetReservationRecommendations')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetClientId",
                        "description": "Retrieve ClientId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_clientId_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetTenantId",
                        "description": "Retrieve TenantId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_tenantid_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "ForEachService - Single",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetClientId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetTenantId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().globalParameters.ResRecServicesArray",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "CopyReservationRecommendationsSingle",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "AbsoluteUrl": "$.nextLink"
                                            }
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['kind']"
                                                    },
                                                    "sink": {
                                                        "path": "$['kind']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "path": "$['id']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "path": "$['name']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "path": "$['type']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['location']"
                                                    },
                                                    "sink": {
                                                        "path": "$['location']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['sku']"
                                                    },
                                                    "sink": {
                                                        "path": "$['sku']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']"
                                                    },
                                                    "sink": {
                                                        "path": "$['properties']"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ManagementAPIDataSet",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "servicePrincipalId": {
                                                    "value": "@activity('GetClientId').output.value",
                                                    "type": "Expression"
                                                },
                                                "servicePrincipalSecretKeyName": {
                                                    "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                                    "type": "Expression"
                                                },
                                                "tenantId": {
                                                    "value": "@activity('GetTenantId').output.value",
                                                    "type": "Expression"
                                                },
                                                "scope": {
                                                    "value": "@pipeline().parameters.scope",
                                                    "type": "Expression"
                                                },
                                                "api": "providers/Microsoft.Consumption/reservationRecommendations",
                                                "apiversion": {
                                                    "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                                    "type": "Expression"
                                                },
                                                "filter": {
                                                    "value": "&$filter=properties/scope eq 'Single' AND properties/lookBackPeriod eq '@{pipeline().parameters.LookbackPeriod}' AND properties/resourceType eq '@{item()}'",
                                                    "type": "Expression"
                                                },
                                                "KeyVaultName": {
                                                    "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "JsonDataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "StorageAccountName": {
                                                    "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                                    "type": "Expression"
                                                },
                                                "Container": {
                                                    "value": "@pipeline().globalParameters.costopt_Container",
                                                    "type": "Expression"
                                                },
                                                "Directory": {
                                                    "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@{concat(pipeline().parameters.Single_RI_FilenamePrefix,item(),'.json')}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    },
                    {
                        "name": "ForEachService - Shared",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "GetClientId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetTenantId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().globalParameters.ResRecServicesArray",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "CopyReservationRecommendationsShared",
                                    "type": "Copy",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "source": {
                                            "type": "RestSource",
                                            "httpRequestTimeout": "00:01:40",
                                            "requestInterval": "00.00:00:00.010",
                                            "requestMethod": "GET",
                                            "paginationRules": {
                                                "AbsoluteUrl": "$.nextLink"
                                            }
                                        },
                                        "sink": {
                                            "type": "JsonSink",
                                            "storeSettings": {
                                                "type": "AzureBlobStorageWriteSettings"
                                            },
                                            "formatSettings": {
                                                "type": "JsonWriteSettings"
                                            }
                                        },
                                        "enableStaging": false,
                                        "translator": {
                                            "type": "TabularTranslator",
                                            "mappings": [
                                                {
                                                    "source": {
                                                        "path": "[['kind']"
                                                    },
                                                    "sink": {
                                                        "path": "$['kind']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['id']"
                                                    },
                                                    "sink": {
                                                        "path": "$['id']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['name']"
                                                    },
                                                    "sink": {
                                                        "path": "$['name']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['type']"
                                                    },
                                                    "sink": {
                                                        "path": "$['type']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['location']"
                                                    },
                                                    "sink": {
                                                        "path": "$['location']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['sku']"
                                                    },
                                                    "sink": {
                                                        "path": "$['sku']"
                                                    }
                                                },
                                                {
                                                    "source": {
                                                        "path": "[['properties']"
                                                    },
                                                    "sink": {
                                                        "path": "$['properties']"
                                                    }
                                                }
                                            ],
                                            "collectionReference": "$['value']"
                                        }
                                    },
                                    "inputs": [
                                        {
                                            "referenceName": "ManagementAPIDataSet",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "servicePrincipalId": {
                                                    "value": "@activity('GetClientId').output.value",
                                                    "type": "Expression"
                                                },
                                                "servicePrincipalSecretKeyName": {
                                                    "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                                    "type": "Expression"
                                                },
                                                "tenantId": {
                                                    "value": "@activity('GetTenantId').output.value",
                                                    "type": "Expression"
                                                },
                                                "scope": {
                                                    "value": "@pipeline().parameters.scope",
                                                    "type": "Expression"
                                                },
                                                "api": "providers/Microsoft.Consumption/reservationRecommendations",
                                                "apiversion": {
                                                    "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                                    "type": "Expression"
                                                },
                                                "filter": {
                                                    "value": "&$filter=properties/scope eq 'Shared' AND properties/lookBackPeriod eq '@{pipeline().parameters.LookbackPeriod}' AND properties/resourceType eq '@{item()}'",
                                                    "type": "Expression"
                                                },
                                                "KeyVaultName": {
                                                    "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ],
                                    "outputs": [
                                        {
                                            "referenceName": "JsonDataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "StorageAccountName": {
                                                    "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                                    "type": "Expression"
                                                },
                                                "Container": {
                                                    "value": "@pipeline().globalParameters.costopt_Container",
                                                    "type": "Expression"
                                                },
                                                "Directory": {
                                                    "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@{concat(pipeline().parameters.Shared_RI_FilenamePrefix,item(),'.json')}",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "Download_StorageBlobDirectory": {
                        "type": "string",
                        "defaultValue": "download/resrecommendations"
                    },
                    "LookbackPeriod": {
                        "type": "string",
                        "defaultValue": "Last7Days"
                    },
                    "Shared_RI_FilenamePrefix": {
                        "type": "string",
                        "defaultValue": "Shared_"
                    },
                    "Single_RI_FilenamePrefix": {
                        "type": "string",
                        "defaultValue": "Single_"
                    },
                    "scope": {
                        "type": "string",
                        "defaultValue": "providers/Microsoft.Billing/billingAccounts/<BillingAccountNum>"
                    },
                    "ConsumptionAPIVersion": {
                        "type": "string",
                        "defaultValue": "2021-10-01"
                    }
                },
                "folder": {
                    "name": "ReservationRecommendations"
                },
                "annotations": [],
                "lastPublishTime": "2021-09-22T23:02:00Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ManagementAPIDataSet')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GetReservationTransactions')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GetClientId",
                        "description": "Retrieve ClientId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_clientId_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetTenantId",
                        "description": "Retrieve TenantId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_tenantid_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "CopyConsumptionAPIReservationTransactionsData",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "GetClientId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetTenantId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": true
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "RestSource",
                                "httpRequestTimeout": "00:10:00",
                                "requestInterval": "00.00:00:00.010",
                                "requestMethod": "GET",
                                "paginationRules": {
                                    "AbsoluteUrl": "$.nextLink"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings",
                                    "filePattern": "arrayOfObjects"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "[['id']"
                                        },
                                        "sink": {
                                            "path": "$['id']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['name']"
                                        },
                                        "sink": {
                                            "path": "$['name']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['type']"
                                        },
                                        "sink": {
                                            "path": "$['type']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['tags']"
                                        },
                                        "sink": {
                                            "path": "$['tags']"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "[['properties']"
                                        },
                                        "sink": {
                                            "path": "$['properties']"
                                        }
                                    }
                                ],
                                "collectionReference": "$['value']"
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "ManagementAPIDataSet",
                                "type": "DatasetReference",
                                "parameters": {
                                    "servicePrincipalId": {
                                        "value": "@activity('GetClientId').output.value",
                                        "type": "Expression"
                                    },
                                    "servicePrincipalSecretKeyName": {
                                        "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                        "type": "Expression"
                                    },
                                    "tenantId": {
                                        "value": "@activity('GetTenantId').output.value",
                                        "type": "Expression"
                                    },
                                    "scope": {
                                        "value": "@pipeline().parameters.scope",
                                        "type": "Expression"
                                    },
                                    "api": "providers/Microsoft.Consumption/reservationTransactions",
                                    "apiversion": {
                                        "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                        "type": "Expression"
                                    },
                                    "filter": {
                                        "value": "&$filter=properties/EventDate ge @{pipeline().parameters.EventStartDate} AND properties/EventDate le @{pipeline().parameters.EventEndDate}",
                                        "type": "Expression"
                                    },
                                    "KeyVaultName": {
                                        "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "JsonDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.DownloadTargetFilename",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "Download_StorageBlobDirectory": {
                        "type": "string",
                        "defaultValue": "download/restransactions"
                    },
                    "DownloadTargetFilename": {
                        "type": "string",
                        "defaultValue": "restransactions.json"
                    },
                    "scope": {
                        "type": "string",
                        "defaultValue": "providers/Microsoft.Billing/billingAccounts/<BillingAccountNum>"
                    },
                    "EventStartDate": {
                        "type": "string",
                        "defaultValue": "2021-08-01"
                    },
                    "EventEndDate": {
                        "type": "string",
                        "defaultValue": "2021-08-31"
                    },
                    "ConsumptionAPIVersion": {
                        "type": "string",
                        "defaultValue": "2019-10-01"
                    }
                },
                "folder": {
                    "name": "ReservationTransactions"
                },
                "annotations": [],
                "lastPublishTime": "2021-09-22T20:01:23Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/ManagementAPIDataSet')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GetAdvisorData')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "GenerateRecommendationsForEachSubscription",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "WebActivityGetSubscriptions",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('WebActivityGetSubscriptions').output.value",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "WebActivityGenerateRecommendations",
                                    "type": "WebActivity",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "url": {
                                            "value": "https://management.azure.com/subscriptions/@{item().subscriptionId}/providers/Microsoft.Advisor/generateRecommendations?api-version=@{pipeline().parameters.AdvisorAPIVersionGenerateRecs}",
                                            "type": "Expression"
                                        },
                                        "method": "POST",
                                        "headers": {},
                                        "body": "x",
                                        "authentication": {
                                            "type": "ServicePrincipal",
                                            "userTenant": {
                                                "value": "@activity('GetTenantId').output.value",
                                                "type": "Expression"
                                            },
                                            "username": {
                                                "value": "@activity('GetClientId').output.value",
                                                "type": "Expression"
                                            },
                                            "resource": "https://management.azure.com",
                                            "password": {
                                                "type": "AzureKeyVaultSecret",
                                                "store": {
                                                    "referenceName": "aubiKeyVault",
                                                    "type": "LinkedServiceReference",
                                                    "parameters": {
                                                        "KeyVaultName": {
                                                            "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                                            "type": "Expression"
                                                        }
                                                    }
                                                },
                                                "secretName": {
                                                    "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                                    "type": "Expression"
                                                }
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "DownloadRecommendationsForEachSub",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "WaitForGeneration",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@activity('WebActivityGetSubscriptions').output.value",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "GetRecommendationsForSub",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "GetRecommendationsForSub",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "WaitTimeSecs": {
                                                "value": "@pipeline().parameters.AdvisorLoopWaitTimeSecs",
                                                "type": "Expression"
                                            },
                                            "SubscriptionId": {
                                                "value": "@item().subscriptionId",
                                                "type": "Expression"
                                            },
                                            "Download_StorageBlobContainer": {
                                                "value": "@pipeline().globalParameters.costopt_Container",
                                                "type": "Expression"
                                            },
                                            "Download_StorageBlobDirectory": {
                                                "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                                "type": "Expression"
                                            },
                                            "DownloadTargetFilename": {
                                                "value": "@pipeline().parameters.DownloadTargetFilename",
                                                "type": "Expression"
                                            },
                                            "RecommendationsAPIVersion": {
                                                "value": "@pipeline().parameters.AdvisorAPIVersionGetRecs",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "WebActivityGetSubscriptions",
                        "type": "WebActivity",
                        "dependsOn": [
                            {
                                "activity": "GetClientId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "GetTenantId",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": "https://management.azure.com/subscriptions?api-version=2020-01-01",
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "ServicePrincipal",
                                "userTenant": {
                                    "value": "@activity('GetTenantId').output.value",
                                    "type": "Expression"
                                },
                                "username": {
                                    "value": "@activity('GetClientId').output.value",
                                    "type": "Expression"
                                },
                                "resource": "https://management.azure.com",
                                "password": {
                                    "type": "AzureKeyVaultSecret",
                                    "store": {
                                        "referenceName": "aubiKeyVault",
                                        "type": "LinkedServiceReference",
                                        "parameters": {
                                            "KeyVaultName": {
                                                "value": "@pipeline().globalParameters.costopt_KeyVaultName",
                                                "type": "Expression"
                                            }
                                        }
                                    },
                                    "secretName": {
                                        "value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    },
                    {
                        "name": "WaitForGeneration",
                        "type": "Wait",
                        "dependsOn": [
                            {
                                "activity": "GenerateRecommendationsForEachSubscription",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "waitTimeInSeconds": {
                                "value": "@pipeline().parameters.GenerationWaitTimeSecs",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "MergeFiles",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "DownloadRecommendationsForEachSub",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "DeleteTargetFileIfItExists",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*.json",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings",
                                    "copyBehavior": "MergeFiles"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings",
                                    "filePattern": "arrayOfObjects"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "JsonDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "NotNeeded",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "JsonDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@concat(pipeline().parameters.Download_StorageBlobDirectory,'/merged')",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.DownloadTargetFilename",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "GetClientId",
                        "description": "Retrieve ClientId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_clientId_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "GetTenantId",
                        "description": "Retrieve TenantId from Keyvault",
                        "type": "WebActivity",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:05:00",
                            "retry": 2,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": true,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "url": {
                                "value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_tenantid_secretname}?api-version=7.0",
                                "type": "Expression"
                            },
                            "method": "GET",
                            "headers": {},
                            "authentication": {
                                "type": "MSI",
                                "resource": "https://vault.azure.net"
                            }
                        }
                    },
                    {
                        "name": "CheckTargetFile",
                        "type": "GetMetadata",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "JsonDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@concat(pipeline().parameters.Download_StorageBlobDirectory,'/merged')",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.DownloadTargetFilename",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "fieldList": [
                                "exists"
                            ],
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": true
                            },
                            "formatSettings": {
                                "type": "JsonReadSettings"
                            }
                        }
                    },
                    {
                        "name": "DeleteTargetFileIfItExists",
                        "type": "IfCondition",
                        "dependsOn": [
                            {
                                "activity": "CheckTargetFile",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@bool(activity('CheckTargetFile').output.exists)",
                                "type": "Expression"
                            },
                            "ifTrueActivities": [
                                {
                                    "name": "DeleteTargetFile",
                                    "type": "Delete",
                                    "dependsOn": [],
                                    "policy": {
                                        "timeout": "7.00:00:00",
                                        "retry": 0,
                                        "retryIntervalInSeconds": 30,
                                        "secureOutput": false,
                                        "secureInput": false
                                    },
                                    "userProperties": [],
                                    "typeProperties": {
                                        "dataset": {
                                            "referenceName": "JsonDataset",
                                            "type": "DatasetReference",
                                            "parameters": {
                                                "StorageAccountName": {
                                                    "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                                    "type": "Expression"
                                                },
                                                "Container": {
                                                    "value": "@pipeline().globalParameters.costopt_Container",
                                                    "type": "Expression"
                                                },
                                                "Directory": {
                                                    "value": "@concat(pipeline().parameters.Download_StorageBlobDirectory,'/merged')",
                                                    "type": "Expression"
                                                },
                                                "FileName": {
                                                    "value": "@pipeline().parameters.DownloadTargetFilename",
                                                    "type": "Expression"
                                                }
                                            }
                                        },
                                        "enableLogging": false,
                                        "storeSettings": {
                                            "type": "AzureBlobStorageReadSettings",
                                            "recursive": true
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "GenerationWaitTimeSecs": {
                        "type": "int",
                        "defaultValue": 120
                    },
                    "Download_StorageBlobDirectory": {
                        "type": "string",
                        "defaultValue": "download/advisor"
                    },
                    "DownloadTargetFilename": {
                        "type": "string",
                        "defaultValue": "advisor.json"
                    },
                    "AdvisorLoopWaitTimeSecs": {
                        "type": "int",
                        "defaultValue": 120
                    },
                    "AdvisorAPIVersionGenerateRecs": {
                        "type": "string",
                        "defaultValue": "2017-04-19"
                    },
                    "AdvisorAPIVersionGetRecs": {
                        "type": "string",
                        "defaultValue": "2020-01-01"
                    }
                },
                "folder": {
                    "name": "Advisor"
                },
                "annotations": [],
                "lastPublishTime": "2021-09-21T21:31:26Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/GetRecommendationsForSub')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/GetReservationRecommendationsOrchestrator')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Gets Shared and Single RI Recommendations for multiple lookback periods (parameter) for multiple services (parameter) and merge these into a single file. \nOne \"Shared Recommendations\" file and one \"Single Recommendations\" file is created.",
                "activities": [
                    {
                        "name": "ForEachLookbackPeriod",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "DeleteTargetFile",
                                "dependencyConditions": [
                                    "Completed"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().globalParameters.ResRecLookbackPeriodsArray",
                                "type": "Expression"
                            },
                            "isSequential": false,
                            "activities": [
                                {
                                    "name": "GetReservationRecommendations",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "GetReservationRecommendations",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "Download_StorageBlobDirectory": {
                                                "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                                "type": "Expression"
                                            },
                                            "LookbackPeriod": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "Shared_RI_FilenamePrefix": {
                                                "value": "@concat(pipeline().parameters.Shared_RI_FilenamePrefix,item())",
                                                "type": "Expression"
                                            },
                                            "Single_RI_FilenamePrefix": {
                                                "value": "@concat(pipeline().parameters.Single_RI_FilenamePrefix,item())",
                                                "type": "Expression"
                                            },
                                            "scope": {
                                                "value": "@pipeline().parameters.scope",
                                                "type": "Expression"
                                            },
                                            "ConsumptionAPIVersion": {
                                                "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "MergeRIRecommendations",
                        "type": "Copy",
                        "dependsOn": [
                            {
                                "activity": "ForEachLookbackPeriod",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "JsonSource",
                                "storeSettings": {
                                    "type": "AzureBlobStorageReadSettings",
                                    "recursive": true,
                                    "wildcardFolderPath": {
                                        "value": "@pipeline().parameters.Download_StorageBlobDirectory",
                                        "type": "Expression"
                                    },
                                    "wildcardFileName": "*",
                                    "enablePartitionDiscovery": false
                                },
                                "formatSettings": {
                                    "type": "JsonReadSettings"
                                }
                            },
                            "sink": {
                                "type": "JsonSink",
                                "storeSettings": {
                                    "type": "AzureBlobStorageWriteSettings",
                                    "copyBehavior": "MergeFiles"
                                },
                                "formatSettings": {
                                    "type": "JsonWriteSettings",
                                    "filePattern": "arrayOfObjects"
                                }
                            },
                            "enableStaging": false
                        },
                        "inputs": [
                            {
                                "referenceName": "RIRecommendationsJson",
                                "type": "DatasetReference",
                                "parameters": {
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "JsonDataset",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@{pipeline().parameters.Download_StorageBlobDirectory}/merged",
                                        "type": "Expression"
                                    },
                                    "FileName": {
                                        "value": "@pipeline().parameters.DownloadTargetFilename",
                                        "type": "Expression"
                                    }
                                }
                            }
                        ]
                    },
                    {
                        "name": "DeleteTargetFile",
                        "type": "Delete",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.00:01:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataset": {
                                "referenceName": "AubiBinaryFile",
                                "type": "DatasetReference",
                                "parameters": {
                                    "StorageAccountName": {
                                        "value": "@pipeline().globalParameters.costopt_StorageAccountName",
                                        "type": "Expression"
                                    },
                                    "Container": {
                                        "value": "@pipeline().globalParameters.costopt_Container",
                                        "type": "Expression"
                                    },
                                    "Directory": {
                                        "value": "@{pipeline().parameters.Download_StorageBlobDirectory}/merged",
                                        "type": "Expression"
                                    },
                                    "FIleName": {
                                        "value": "@pipeline().parameters.DownloadTargetFilename",
                                        "type": "Expression"
                                    }
                                }
                            },
                            "enableLogging": false,
                            "storeSettings": {
                                "type": "AzureBlobStorageReadSettings",
                                "recursive": false,
                                "enablePartitionDiscovery": false
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "Download_StorageBlobDirectory": {
                        "type": "string",
                        "defaultValue": "download/resrecommendations"
                    },
                    "DownloadTargetFilename": {
                        "type": "string",
                        "defaultValue": "reservation_recs_merged.json"
                    },
                    "Shared_RI_FilenamePrefix": {
                        "type": "string",
                        "defaultValue": "Shared_RI_Recommendation"
                    },
                    "Single_RI_FilenamePrefix": {
                        "type": "string",
                        "defaultValue": "Single_RI_Recommendation"
                    },
                    "scope": {
                        "type": "string",
                        "defaultValue": "providers/Microsoft.Billing/billingAccounts/<BillingAccountNum>"
                    },
                    "ConsumptionAPIVersion": {
                        "type": "string",
                        "defaultValue": "2021-10-01"
                    }
                },
                "folder": {
                    "name": "ReservationRecommendations"
                },
                "annotations": [],
                "lastPublishTime": "2021-10-19T16:23:11Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/GetReservationRecommendations')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/UsageExportForDateRange')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Calls the UsageExport pipeline by breaking a large date range into smaller configurable chunks",
                "activities": [
                    {
                        "name": "UntilEndDateReached",
                        "type": "Until",
                        "dependsOn": [
                            {
                                "activity": "SetBatchStartDate",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "expression": {
                                "value": "@greaterOrEquals(variables('BatchEndDate'),pipeline().parameters.EndDate)",
                                "type": "Expression"
                            },
                            "activities": [
                                {
                                    "name": "SetBatchEndDate",
                                    "type": "SetVariable",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "BatchEndDate",
                                        "value": {
                                            "value": "@if( greater(adddays(variables('BatchStartDate'),pipeline().parameters.DateRangeInterval,'yyyy-MM-dd') , pipeline().parameters.EndDate)\n, pipeline().parameters.EndDate\n,adddays(variables('BatchStartDate'),pipeline().parameters.DateRangeInterval,'yyyy-MM-dd')\n)",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "AddDateRangeToProcess",
                                    "type": "AppendVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "SetBatchEndDate",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "DateRangesToProcess",
                                        "value": {
                                            "value": "{\"StartDate\":\"@{variables('BatchStartDate')}\",\"EndDate\":\"@{variables('BatchEndDate')}\"}",
                                            "type": "Expression"
                                        }
                                    }
                                },
                                {
                                    "name": "IncrementBatchStartDate",
                                    "type": "SetVariable",
                                    "dependsOn": [
                                        {
                                            "activity": "AddDateRangeToProcess",
                                            "dependencyConditions": [
                                                "Succeeded"
                                            ]
                                        }
                                    ],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "variableName": "BatchStartDate",
                                        "value": {
                                            "value": "@adddays(variables('BatchEndDate'),1,'yyyy-MM-dd')",
                                            "type": "Expression"
                                        }
                                    }
                                }
                            ],
                            "timeout": "7.00:00:00"
                        }
                    },
                    {
                        "name": "SetBatchStartDate",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "BatchStartDate",
                            "value": {
                                "value": "@pipeline().parameters.StartDate",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "ForEachDateRange",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "UntilEndDateReached",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@variables('DateRangesToProcess')",
                                "type": "Expression"
                            },
                            "batchCount": 3,
                            "activities": [
                                {
                                    "name": "CreateAndRunUsageExport",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "CreateAndRunUsageExport",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "exportName": {
                                                "value": "@{pipeline().parameters.exportName_prefix}_@{json(item()).StartDate}_@{json(item()).EndDate}_@{pipeline().parameters.ExportType}",
                                                "type": "Expression"
                                            },
                                            "scope": {
                                                "value": "@pipeline().parameters.scope",
                                                "type": "Expression"
                                            },
                                            "CostManagementApiVersion": {
                                                "value": "@pipeline().parameters.CostManagementApiVersion",
                                                "type": "Expression"
                                            },
                                            "UsageDownload_StorageBlobDirectory": {
                                                "value": "@pipeline().parameters.UsageDownload_StorageBlobDirectory",
                                                "type": "Expression"
                                            },
                                            "MaxExportExecutionRetries": {
                                                "value": "@pipeline().parameters.MaxExportExecutionRetries",
                                                "type": "Expression"
                                            },
                                            "StartDate": {
                                                "value": "@json(item()).StartDate",
                                                "type": "Expression"
                                            },
                                            "EndDate": {
                                                "value": "@json(item()).EndDate",
                                                "type": "Expression"
                                            },
                                            "ExportTimeframe": {
                                                "value": "@pipeline().parameters.ExportTimeframe",
                                                "type": "Expression"
                                            },
                                            "ExportType": {
                                                "value": "@pipeline().parameters.ExportType",
                                                "type": "Expression"
                                            },
                                            "ExportStatusCheckLoopTime": {
                                                "value": "@pipeline().parameters.ExportStatusCheckLoopTime",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "exportName_prefix": {
                        "type": "string",
                        "defaultValue": "msftExportUsageTemp"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "CostManagementApiVersion": {
                        "type": "string",
                        "defaultValue": "2021-01-01"
                    },
                    "UsageDownload_StorageBlobDirectory": {
                        "type": "string",
                        "defaultValue": "download/usage"
                    },
                    "MaxExportExecutionRetries": {
                        "type": "int",
                        "defaultValue": 3
                    },
                    "StartDate": {
                        "type": "string",
                        "defaultValue": "2021-09-01"
                    },
                    "EndDate": {
                        "type": "string",
                        "defaultValue": "2021-09-02"
                    },
                    "ExportTimeframe": {
                        "type": "string",
                        "defaultValue": "Custom"
                    },
                    "ExportType": {
                        "type": "string",
                        "defaultValue": "ActualCost"
                    },
                    "ExportStatusCheckLoopTime": {
                        "type": "int",
                        "defaultValue": 60
                    },
                    "DateRangeInterval": {
                        "type": "int",
                        "defaultValue": 1
                    }
                },
                "variables": {
                    "DateRangesToProcess": {
                        "type": "Array"
                    },
                    "BatchStartDate": {
                        "type": "String"
                    },
                    "BatchEndDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "UsageData"
                },
                "annotations": [],
                "lastPublishTime": "2021-09-23T11:22:11Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/CreateAndRunUsageExport')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RefreshAllData_ExistingExports')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Use this pipeline when Cost Management Exports for ActualCost and AmortizedCost were created at deployment time.\n\nThis pipeline should be triggered after the exports have run. i.e. if the exports are scheduled to run at 10am, then run this pipeline after 11am.\nIf the Usage files dont exist, the usage data load will fail.\n\nThis pipeline executes all aubi data pipelines.\nUsage Data is obtained from the specified \n\"UsageExportDirectory\". i.e.\n\nAll other pipelines are run for startdate to end date",
                "activities": [
                    {
                        "name": "GetISFRatioDataPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetISFRatioDataPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/isfratio')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "isfratio.csv",
                                "ISFFileURL": "https://isfratio.blob.core.windows.net/isfratio/ISFRatio.csv"
                            }
                        }
                    },
                    {
                        "name": "LoadIFSRatioToSQL",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "GetISFRatioDataPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "LoadISFRatioToSQL",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/isfratio')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "isfratio.csv",
                                "TargetDBSchema": "costmanagement",
                                "TargetDBTable": "ISFData"
                            }
                        }
                    },
                    {
                        "name": "GetMarketplaceData",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Set Extract End Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetMarketplaceData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/marketplace')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "marketplace.json",
                                "scope": {
                                    "value": "providers/Microsoft.Billing/billingAccounts/@{pipeline().globalParameters.costopt_EnrollmentNumber}",
                                    "type": "Expression"
                                },
                                "UsageStartDate": {
                                    "value": "@pipeline().parameters.FullRefreshStartDate",
                                    "type": "Expression"
                                },
                                "UsageEndDate": {
                                    "value": "@variables('ExtractEndDate')",
                                    "type": "Expression"
                                },
                                "ConsumptionAPIVersion": {
                                    "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "GetPriceSheet",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetPriceSheet",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobContainer": {
                                    "value": "@pipeline().globalParameters.costopt_Container",
                                    "type": "Expression"
                                },
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/pricesheet')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "pricesheet.json",
                                "scope": {
                                    "value": "subscriptions/@{pipeline().globalParameters.costopt_PriceSheetSubscriptionId}",
                                    "type": "Expression"
                                },
                                "ConsumptionAPIVersion": {
                                    "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "GetReservationRecommendationsOrchestrator",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Set Extract End Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetReservationRecommendationsOrchestrator",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/resrecommendations')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "reservation_merged.json",
                                "Shared_RI_FilenamePrefix": "Shared_RI_Recommendation",
                                "Single_RI_FilenamePrefix": "Single_RI_Recommendation",
                                "scope": {
                                    "value": "providers/Microsoft.Billing/billingAccounts/@{pipeline().globalParameters.costopt_EnrollmentNumber}",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Set Extract End Date",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ExtractEndDate",
                            "value": {
                                "value": "@formatDateTime(utcnow(),'yyyy-MM-dd')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "GetReservationTransactions",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Set Extract End Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetReservationTransactions",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/restransactions')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "restransactions.json",
                                "scope": {
                                    "value": "providers/Microsoft.Billing/billingAccounts/@{pipeline().globalParameters.costopt_EnrollmentNumber}",
                                    "type": "Expression"
                                },
                                "EventStartDate": {
                                    "value": "@pipeline().parameters.FullRefreshStartDate",
                                    "type": "Expression"
                                },
                                "EventEndDate": {
                                    "value": "@variables('ExtractEndDate')",
                                    "type": "Expression"
                                },
                                "ConsumptionAPIVersion": {
                                    "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "GetAdvisorData",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetAdvisorData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "GenerationWaitTimeSecs": {
                                    "value": "@pipeline().parameters.AdvisorGenerationWaitSecs",
                                    "type": "Expression"
                                },
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/advisor')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "advisor.json",
                                "AdvisorLoopWaitTimeSecs": 120
                            }
                        }
                    },
                    {
                        "name": "GetReservationDetailsOrchestrator",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Set Extract End Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetReservationDetailsOrchestrator",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "costopt_StorageDirectoryName": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/resdetails')",
                                    "type": "Expression"
                                },
                                "ExtractStartDate": {
                                    "value": "@pipeline().parameters.FullRefreshStartDate",
                                    "type": "Expression"
                                },
                                "ExtractEndDate": {
                                    "value": "@variables('ExtractEndDate')",
                                    "type": "Expression"
                                },
                                "ResDetailsLoopIncrement": {
                                    "value": "@int('60')",
                                    "type": "Expression"
                                },
                                "BillingAccountScope": {
                                    "value": "providers/Microsoft.Billing/billingAccounts/@{pipeline().globalParameters.costopt_EnrollmentNumber}",
                                    "type": "Expression"
                                },
                                "CostManagementAPIVersion": {
                                    "value": "@pipeline().parameters.CostMangementReservationDetailsAPIVersion",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "LoadResDetailsToDatabase",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "GetReservationDetailsOrchestrator",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "LoadResDetailsToDatabase",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "costopt_StorageDirectoryName": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/resdetails')",
                                    "type": "Expression"
                                },
                                "ResDetailsTargetTable": "ReservationDetails",
                                "ResDetailsTargetSchema": "costmanagement"
                            }
                        }
                    },
                    {
                        "name": "ProcessInboundUsageData",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "ProcessInboundUsageData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "UsageDownload_StorageBlobDirectory": {
                                    "value": "@pipeline().parameters.UsageExportDirectory",
                                    "type": "Expression"
                                },
                                "TargetSchemaName": "costmanagement",
                                "ActualCostExportName": "msftCostManagementExportActualCost",
                                "AmortizedCostExportName": "msftCostManagementExportAmortizedCost"
                            }
                        }
                    },
                    {
                        "name": "BuildSummaryTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ProcessInboundUsageData",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "costmanagement.BuildSummaryTables"
                        },
                        "linkedServiceName": {
                            "referenceName": "AubiSQLDatabase",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databasename": {
                                    "value": "@pipeline().globalParameters.costopt_sqldbname",
                                    "type": "Expression"
                                },
                                "servername": {
                                    "value": "@pipeline().globalParameters.costopt_sqlservername",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "FullRefreshStartDate": {
                        "type": "string",
                        "defaultValue": "2021-01-01"
                    },
                    "costopt_StorageDirectoryName": {
                        "type": "string",
                        "defaultValue": "download"
                    },
                    "AdvisorGenerationWaitSecs": {
                        "type": "int",
                        "defaultValue": 600
                    },
                    "CostManagementExportsAPIVersion": {
                        "type": "string",
                        "defaultValue": "2021-01-01"
                    },
                    "ConsumptionAPIVersion": {
                        "type": "string",
                        "defaultValue": "2019-10-01"
                    },
                    "AdvisorAPIVersionGenerateRecs": {
                        "type": "string",
                        "defaultValue": "2017-04-19"
                    },
                    "AdvisorAPIVersionGetRecs": {
                        "type": "string",
                        "defaultValue": "2020-01-01"
                    },
                    "CostMangementReservationDetailsAPIVersion": {
                        "type": "string",
                        "defaultValue": "2019-11-01"
                    },
                    "UsageExportDirectory": {
                        "type": "string",
                        "defaultValue": "download/usage/scheduled_exports"
                    }
                },
                "variables": {
                    "CurrentBillingPeriod": {
                        "type": "String",
                        "defaultValue": "202006"
                    },
                    "ExtractEndDate": {
                        "type": "String",
                        "defaultValue": "2020-06-16"
                    },
                    "ResDetailsLoopEndDate": {
                        "type": "String"
                    },
                    "ResDetailsLoopStartDate": {
                        "type": "String"
                    },
                    "IncrementalRefreshStartDate": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-10-07T22:37:04Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/GetMarketplaceData')]",
                "[concat(variables('factoryId'), '/pipelines/GetPriceSheet')]",
                "[concat(variables('factoryId'), '/pipelines/GetReservationRecommendationsOrchestrator')]",
                "[concat(variables('factoryId'), '/pipelines/GetReservationTransactions')]",
                "[concat(variables('factoryId'), '/pipelines/GetAdvisorData')]",
                "[concat(variables('factoryId'), '/pipelines/GetReservationDetailsOrchestrator')]",
                "[concat(variables('factoryId'), '/pipelines/LoadResDetailsToDatabase')]",
                "[concat(variables('factoryId'), '/pipelines/ProcessInboundUsageData')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/UsageExportOrchestrator')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Calls the UsageExport pipeline by breaking a large date range into smaller configurable chunks",
                "activities": [
                    {
                        "name": "ForEachExportType",
                        "type": "ForEach",
                        "dependsOn": [
                            {
                                "activity": "ManagePartitions",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "items": {
                                "value": "@pipeline().parameters.ExportTypeArray",
                                "type": "Expression"
                            },
                            "batchCount": 2,
                            "activities": [
                                {
                                    "name": "UsageExportForDateRange",
                                    "type": "ExecutePipeline",
                                    "dependsOn": [],
                                    "userProperties": [],
                                    "typeProperties": {
                                        "pipeline": {
                                            "referenceName": "UsageExportForDateRange",
                                            "type": "PipelineReference"
                                        },
                                        "waitOnCompletion": true,
                                        "parameters": {
                                            "exportName_prefix": {
                                                "value": "@pipeline().parameters.exportName_prefix",
                                                "type": "Expression"
                                            },
                                            "scope": {
                                                "value": "@pipeline().parameters.scope",
                                                "type": "Expression"
                                            },
                                            "CostManagementApiVersion": {
                                                "value": "@pipeline().parameters.CostManagementApiVersion",
                                                "type": "Expression"
                                            },
                                            "UsageDownload_StorageBlobDirectory": {
                                                "value": "@{pipeline().parameters.UsageDownload_StorageBlobDirectory}/@{item()}",
                                                "type": "Expression"
                                            },
                                            "MaxExportExecutionRetries": {
                                                "value": "@pipeline().parameters.MaxExportExecutionRetries",
                                                "type": "Expression"
                                            },
                                            "StartDate": {
                                                "value": "@pipeline().parameters.StartDate",
                                                "type": "Expression"
                                            },
                                            "EndDate": {
                                                "value": "@pipeline().parameters.EndDate",
                                                "type": "Expression"
                                            },
                                            "ExportTimeframe": {
                                                "value": "@pipeline().parameters.ExportTimeframe",
                                                "type": "Expression"
                                            },
                                            "ExportType": {
                                                "value": "@item()",
                                                "type": "Expression"
                                            },
                                            "ExportStatusCheckLoopTime": {
                                                "value": "@pipeline().parameters.ExportStatusCheckLoopTime",
                                                "type": "Expression"
                                            },
                                            "DateRangeInterval": {
                                                "value": "@pipeline().parameters.DateRangeInterval",
                                                "type": "Expression"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    {
                        "name": "ManagePartitions",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "costmanagement.addMonthPartitions"
                        },
                        "linkedServiceName": {
                            "referenceName": "AubiSQLDatabase",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databasename": {
                                    "value": "@pipeline().globalParameters.costopt_sqldbname",
                                    "type": "Expression"
                                },
                                "servername": {
                                    "value": "@pipeline().globalParameters.costopt_sqlservername",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "BuildSummaryTables",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ForEachExportType",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "costmanagement.BuildSummaryTables"
                        },
                        "linkedServiceName": {
                            "referenceName": "AubiSQLDatabase",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databasename": {
                                    "value": "@pipeline().globalParameters.costopt_sqldbname",
                                    "type": "Expression"
                                },
                                "servername": {
                                    "value": "@pipeline().globalParameters.costopt_sqlservername",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ReOrganizeActualCostIndex",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "BuildSummaryTables",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "costmanagement.ReorganiseActualCostIndex"
                        },
                        "linkedServiceName": {
                            "referenceName": "AubiSQLDatabase",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databasename": {
                                    "value": "@pipeline().globalParameters.costopt_sqldbname",
                                    "type": "Expression"
                                },
                                "servername": {
                                    "value": "@pipeline().globalParameters.costopt_sqlservername",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "ReOrganizeAmortizedCostIndex",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "ReOrganizeActualCostIndex",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "costmanagement.ReorganiseAmortizedCostIndex"
                        },
                        "linkedServiceName": {
                            "referenceName": "AubiSQLDatabase",
                            "type": "LinkedServiceReference",
                            "parameters": {
                                "databasename": {
                                    "value": "@pipeline().globalParameters.costopt_sqldbname",
                                    "type": "Expression"
                                },
                                "servername": {
                                    "value": "@pipeline().globalParameters.costopt_sqlservername",
                                    "type": "Expression"
                                }
                            }
                        }
                    }
                ],
                "concurrency": 1,
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "exportName_prefix": {
                        "type": "string",
                        "defaultValue": "msftExportUsageTemp"
                    },
                    "scope": {
                        "type": "string",
                        "defaultValue": "providers/Microsoft.Billing/billingAccounts/<BillingAccountNum>"
                    },
                    "CostManagementApiVersion": {
                        "type": "string",
                        "defaultValue": "2021-01-01"
                    },
                    "UsageDownload_StorageBlobDirectory": {
                        "type": "string",
                        "defaultValue": "download/usage"
                    },
                    "MaxExportExecutionRetries": {
                        "type": "int",
                        "defaultValue": 3
                    },
                    "StartDate": {
                        "type": "string",
                        "defaultValue": "2021-09-01"
                    },
                    "EndDate": {
                        "type": "string",
                        "defaultValue": "2021-09-02"
                    },
                    "ExportTimeframe": {
                        "type": "string",
                        "defaultValue": "Custom"
                    },
                    "ExportTypeArray": {
                        "type": "array",
                        "defaultValue": [
                            "ActualCost",
                            "AmortizedCost"
                        ]
                    },
                    "ExportStatusCheckLoopTime": {
                        "type": "int",
                        "defaultValue": 60
                    },
                    "DateRangeInterval": {
                        "type": "int",
                        "defaultValue": 1
                    }
                },
                "variables": {
                    "DateRangesToProcess": {
                        "type": "Array"
                    },
                    "BatchStartDate": {
                        "type": "String"
                    },
                    "BatchEndDate": {
                        "type": "String"
                    },
                    "ExportStartDate": {
                        "type": "String"
                    },
                    "ExportEndDate": {
                        "type": "String"
                    }
                },
                "folder": {
                    "name": "UsageData"
                },
                "annotations": [],
                "lastPublishTime": "2021-09-23T11:22:11Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/UsageExportForDateRange')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/RefreshAllData_FullLoad')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "description": "Use this pipeline when cost management exports have not been created.\n\nThis pipeline will create \"temporary\" exports, execute them, and then delete the exports once complete.\n\nExecutes all aubi data pipelines\nUsage Data is refreshed incrementally based on Two parameter values:\nIncrementalUpdateIntervalDays - defines how far back in time to load data from. i.e. This defines the start date for this run.\nDefaults to 7 days in the past.\n\nUsageExportDataRangeInterval - Exports will be generated with this many days of data until the end date (current date) is reached.\n\ne.g. With the defaults left as they are, each time this pipeline is run, ONE export file will be created for the previous week (7 days)\n\n\nAll other pipelines are run from:\nFullRefreshStartDate \nto \nExtract End Date (which is set to todays date)\n",
                "activities": [
                    {
                        "name": "GetISFRatioDataPipeline",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetISFRatioDataPipeline",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/isfratio')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "isfratio.csv",
                                "ISFFileURL": "https://isfratio.blob.core.windows.net/isfratio/ISFRatio.csv"
                            }
                        }
                    },
                    {
                        "name": "LoadIFSRatioToSQL",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "GetISFRatioDataPipeline",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "LoadISFRatioToSQL",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/isfratio')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "isfratio.csv",
                                "TargetDBSchema": "costmanagement",
                                "TargetDBTable": "ISFData"
                            }
                        }
                    },
                    {
                        "name": "GetMarketplaceData",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Set Extract End Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetMarketplaceData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/marketplace')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "marketplace.json",
                                "scope": {
                                    "value": "providers/Microsoft.Billing/billingAccounts/@{pipeline().globalParameters.costopt_EnrollmentNumber}",
                                    "type": "Expression"
                                },
                                "UsageStartDate": {
                                    "value": "@pipeline().parameters.FullRefreshStartDate",
                                    "type": "Expression"
                                },
                                "UsageEndDate": {
                                    "value": "@variables('ExtractEndDate')",
                                    "type": "Expression"
                                },
                                "ConsumptionAPIVersion": {
                                    "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "GetPriceSheet",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetPriceSheet",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobContainer": {
                                    "value": "@pipeline().globalParameters.costopt_Container",
                                    "type": "Expression"
                                },
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/pricesheet')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "pricesheet.json",
                                "scope": {
                                    "value": "subscriptions/@{pipeline().globalParameters.costopt_PriceSheetSubscriptionId}",
                                    "type": "Expression"
                                },
                                "ConsumptionAPIVersion": {
                                    "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "GetReservationRecommendationsOrchestrator",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Set Extract End Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetReservationRecommendationsOrchestrator",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/resrecommendations')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "reservation_merged.json",
                                "Shared_RI_FilenamePrefix": "Shared_RI_Recommendation",
                                "Single_RI_FilenamePrefix": "Single_RI_Recommendation",
                                "scope": {
                                    "value": "providers/Microsoft.Billing/billingAccounts/@{pipeline().globalParameters.costopt_EnrollmentNumber}",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "Set Extract End Date",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "ExtractEndDate",
                            "value": {
                                "value": "@formatDateTime(utcnow(),'yyyy-MM-dd')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "GetReservationTransactions",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Set Extract End Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetReservationTransactions",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/restransactions')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "restransactions.json",
                                "scope": {
                                    "value": "providers/Microsoft.Billing/billingAccounts/@{pipeline().globalParameters.costopt_EnrollmentNumber}",
                                    "type": "Expression"
                                },
                                "EventStartDate": {
                                    "value": "@pipeline().parameters.FullRefreshStartDate",
                                    "type": "Expression"
                                },
                                "EventEndDate": {
                                    "value": "@variables('ExtractEndDate')",
                                    "type": "Expression"
                                },
                                "ConsumptionAPIVersion": {
                                    "value": "@pipeline().parameters.ConsumptionAPIVersion",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "GetAdvisorData",
                        "type": "ExecutePipeline",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetAdvisorData",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "GenerationWaitTimeSecs": {
                                    "value": "@pipeline().parameters.AdvisorGenerationWaitSecs",
                                    "type": "Expression"
                                },
                                "Download_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/advisor')",
                                    "type": "Expression"
                                },
                                "DownloadTargetFilename": "advisor.json",
                                "AdvisorLoopWaitTimeSecs": 120
                            }
                        }
                    },
                    {
                        "name": "Set Incremental Refresh Start Date",
                        "type": "SetVariable",
                        "dependsOn": [],
                        "userProperties": [],
                        "typeProperties": {
                            "variableName": "IncrementalRefreshStartDate",
                            "value": {
                                "value": "@adddays(utcnow(),mul(-1,int(pipeline().parameters.IncrementalUpdateIntervalDays)),'yyyy-MM-dd')",
                                "type": "Expression"
                            }
                        }
                    },
                    {
                        "name": "UsageExportOrchestrator",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Set Incremental Refresh Start Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "Set Extract End Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "UsageExportOrchestrator",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "exportName_prefix": {
                                    "value": "@pipeline().parameters.exportName_prefix",
                                    "type": "Expression"
                                },
                                "scope": {
                                    "value": "providers/Microsoft.Billing/billingAccounts/@{pipeline().globalParameters.costopt_EnrollmentNumber}",
                                    "type": "Expression"
                                },
                                "CostManagementApiVersion": {
                                    "value": "@pipeline().parameters.CostManagementExportsAPIVersion",
                                    "type": "Expression"
                                },
                                "UsageDownload_StorageBlobDirectory": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/usage')",
                                    "type": "Expression"
                                },
                                "MaxExportExecutionRetries": 3,
                                "StartDate": {
                                    "value": "@variables('IncrementalRefreshStartDate')",
                                    "type": "Expression"
                                },
                                "EndDate": {
                                    "value": "@variables('ExtractEndDate')",
                                    "type": "Expression"
                                },
                                "ExportTimeframe": "Custom",
                                "ExportTypeArray": {
                                    "value": "@pipeline().parameters.UsageExportTypeArray",
                                    "type": "Expression"
                                },
                                "ExportStatusCheckLoopTime": 60,
                                "DateRangeInterval": {
                                    "value": "@pipeline().parameters.UsageExportDateRangeInterval",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "GetReservationDetailsOrchestrator",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "Set Extract End Date",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "GetReservationDetailsOrchestrator",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "costopt_StorageDirectoryName": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/resdetails')",
                                    "type": "Expression"
                                },
                                "ExtractStartDate": {
                                    "value": "@pipeline().parameters.FullRefreshStartDate",
                                    "type": "Expression"
                                },
                                "ExtractEndDate": {
                                    "value": "@variables('ExtractEndDate')",
                                    "type": "Expression"
                                },
                                "ResDetailsLoopIncrement": {
                                    "value": "@int('60')",
                                    "type": "Expression"
                                },
                                "BillingAccountScope": {
                                    "value": "providers/Microsoft.Billing/billingAccounts/@{pipeline().globalParameters.costopt_EnrollmentNumber}",
                                    "type": "Expression"
                                },
                                "CostManagementAPIVersion": {
                                    "value": "@pipeline().parameters.CostMangementReservationDetailsAPIVersion",
                                    "type": "Expression"
                                }
                            }
                        }
                    },
                    {
                        "name": "LoadResDetailsToDatabase",
                        "type": "ExecutePipeline",
                        "dependsOn": [
                            {
                                "activity": "GetReservationDetailsOrchestrator",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "userProperties": [],
                        "typeProperties": {
                            "pipeline": {
                                "referenceName": "LoadResDetailsToDatabase",
                                "type": "PipelineReference"
                            },
                            "waitOnCompletion": true,
                            "parameters": {
                                "costopt_StorageDirectoryName": {
                                    "value": "@concat(pipeline().parameters.costopt_StorageDirectoryName,'/resdetails')",
                                    "type": "Expression"
                                },
                                "ResDetailsTargetTable": "ReservationDetails",
                                "ResDetailsTargetSchema": "costmanagement"
                            }
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {},
                    "cancelAfter": {}
                },
                "parameters": {
                    "FullRefreshStartDate": {
                        "type": "string",
                        "defaultValue": "2021-01-01"
                    },
                    "costopt_StorageDirectoryName": {
                        "type": "string",
                        "defaultValue": "download"
                    },
                    "AdvisorGenerationWaitSecs": {
                        "type": "int",
                        "defaultValue": 600
                    },
                    "CostManagementExportsAPIVersion": {
                        "type": "string",
                        "defaultValue": "2021-01-01"
                    },
                    "ConsumptionAPIVersion": {
                        "type": "string",
                        "defaultValue": "2019-10-01"
                    },
                    "IncrementalUpdateIntervalDays": {
                        "type": "int",
                        "defaultValue": 7
                    },
                    "AdvisorAPIVersionGenerateRecs": {
                        "type": "string",
                        "defaultValue": "2017-04-19"
                    },
                    "AdvisorAPIVersionGetRecs": {
                        "type": "string",
                        "defaultValue": "2020-01-01"
                    },
                    "exportName_prefix": {
                        "type": "string",
                        "defaultValue": "msftExportUsageTemp"
                    },
                    "UsageExportTypeArray": {
                        "type": "array",
                        "defaultValue": [
                            "ActualCost",
                            "AmortizedCost"
                        ]
                    },
                    "UsageExportDateRangeInterval": {
                        "type": "int",
                        "defaultValue": 7
                    },
                    "CostMangementReservationDetailsAPIVersion": {
                        "type": "string",
                        "defaultValue": "2019-11-01"
                    }
                },
                "variables": {
                    "CurrentBillingPeriod": {
                        "type": "String",
                        "defaultValue": "202006"
                    },
                    "ExtractEndDate": {
                        "type": "String",
                        "defaultValue": "2020-06-16"
                    },
                    "ResDetailsLoopEndDate": {
                        "type": "String"
                    },
                    "ResDetailsLoopStartDate": {
                        "type": "String"
                    },
                    "IncrementalRefreshStartDate": {
                        "type": "String"
                    }
                },
                "annotations": [],
                "lastPublishTime": "2021-09-21T22:04:42Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/pipelines/GetMarketplaceData')]",
                "[concat(variables('factoryId'), '/pipelines/GetPriceSheet')]",
                "[concat(variables('factoryId'), '/pipelines/GetReservationRecommendationsOrchestrator')]",
                "[concat(variables('factoryId'), '/pipelines/GetReservationTransactions')]",
                "[concat(variables('factoryId'), '/pipelines/GetAdvisorData')]",
                "[concat(variables('factoryId'), '/pipelines/UsageExportOrchestrator')]",
                "[concat(variables('factoryId'), '/pipelines/GetReservationDetailsOrchestrator')]",
                "[concat(variables('factoryId'), '/pipelines/LoadResDetailsToDatabase')]"
            ]
        }
    ]
}
