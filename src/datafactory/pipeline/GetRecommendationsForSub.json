{
	"name": "GetRecommendationsForSub",
	"properties": {
		"activities": [
			{
				"name": "TryUntilFileExists",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "GetTenantId",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "GetClientId",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@bool(activity('GetFileMetadata').output.exists)",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "GetFileMetadata",
							"type": "GetMetadata",
							"dependsOn": [
								{
									"activity": "GetAdvisorData",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:02:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "JsonDataset",
									"type": "DatasetReference",
									"parameters": {
										"StorageAccountName": {
											"value": "@pipeline().globalParameters.costopt_StorageAccountName",
											"type": "Expression"
										},
										"Container": {
											"value": "@pipeline().globalParameters.costopt_Container",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.Download_StorageBlobDirectory",
											"type": "Expression"
										},
										"FileName": {
											"value": "advisor_@{pipeline().parameters.SubscriptionId}.json",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							}
						},
						{
							"name": "GetAdvisorData",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET"
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "ManagementAPIDataSet",
									"type": "DatasetReference",
									"parameters": {
										"servicePrincipalId": {
											"value": "@activity('GetClientId').output.value",
											"type": "Expression"
										},
										"servicePrincipalSecretKeyName": {
											"value": "@pipeline().globalParameters.costopt_clientsecret_secretname",
											"type": "Expression"
										},
										"tenantId": {
											"value": "@activity('GetTenantId').output.value",
											"type": "Expression"
										},
										"scope": {
											"value": "subscriptions/@{pipeline().parameters.SubscriptionId}",
											"type": "Expression"
										},
										"api": {
											"value": "providers/Microsoft.Advisor/recommendations",
											"type": "Expression"
										},
										"apiversion": {
											"value": "@pipeline().parameters.RecommendationsAPIVersion",
											"type": "Expression"
										},
										"filter": {
											"value": "@trim('')",
											"type": "Expression"
										},
										"KeyVaultName": {
											"value": "@pipeline().globalParameters.costopt_KeyVaultName",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "JsonDataset",
									"type": "DatasetReference",
									"parameters": {
										"StorageAccountName": {
											"value": "@pipeline().globalParameters.costopt_StorageAccountName",
											"type": "Expression"
										},
										"Container": {
											"value": "@pipeline().globalParameters.costopt_Container",
											"type": "Expression"
										},
										"Directory": {
											"value": "@pipeline().parameters.Download_StorageBlobDirectory",
											"type": "Expression"
										},
										"FileName": {
											"value": "advisor_@{pipeline().parameters.SubscriptionId}.json",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "WaitIfFileIsMissing",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "GetFileMetadata",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@bool(activity('GetFileMetadata').output.exists)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Wait",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": {
												"value": "@pipeline().parameters.WaitTimeSecs",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					],
					"timeout": "0.00:20:00"
				}
			},
			{
				"name": "GetClientId",
				"description": "Retrieve ClientId from Keyvault",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:05:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_clientId_secretname}?api-version=7.0",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "GetTenantId",
				"description": "Retrieve TenantId from Keyvault",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:05:00",
					"retry": 2,
					"retryIntervalInSeconds": 30,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "https://@{pipeline().globalParameters.costopt_KeyVaultName}.vault.azure.net/secrets/@{pipeline().globalParameters.costopt_tenantid_secretname}?api-version=7.0",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			}
		],
		"parameters": {
			"WaitTimeSecs": {
				"type": "int",
				"defaultValue": 60
			},
			"SubscriptionId": {
				"type": "string"
			},
			"Download_StorageBlobContainer": {
				"type": "string"
			},
			"Download_StorageBlobDirectory": {
				"type": "string"
			},
			"DownloadTargetFilename": {
				"type": "string"
			},
			"RecommendationsAPIVersion": {
				"type": "string",
				"defaultValue": "2020-01-01"
			}
		},
		"folder": {
			"name": "Advisor"
		},
		"annotations": [],
		"lastPublishTime": "2021-09-22T20:01:23Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}
